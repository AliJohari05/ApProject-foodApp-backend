openapi: 3.0.3
info:
  title: Online Food Ordering API
  version: 1.0.0
  description: RESTful API for food ordering system (buyers, sellers, couriers, and admin).

servers:
  - url: https://api.food-ordering.com/v1

tags:
  - name: auth
    description: Authentication and user profile APIs
  - name: restaurant
    description: APIs related to restaurant management
  - name: courier
    description: APIs for couriers to manage deliveries
  - name: buyer
    description: APIs for buyers to browse, order, and review
  - name: order
    description: APIs for order tracking and payment processing
  - name: admin
    description: Administrative APIs for user, order, and finance management

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullName
                - phone
                - password
                - role
                - address
              properties:
                fullName:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum: [buyer, seller, courier]
                address:
                  type: string
                profileImageBase64:
                  type: string
                bankInfo:
                  type: object
                  required: [bankName, accountNumber]
                  properties:
                    bankName:
                      type: string
                    accountNumber:
                      type: string
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: string
                  token:
                    type: string
        '400':
          description: Invalid input data
        '409':
          description: Phone number already exists

  /auth/login:
    post:
      tags:
        - auth
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone, password]
              properties:
                phone:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      fullName:
                        type: string
                      role:
                        type: string
        '401':
          description: Invalid phone or password

  /auth/profile:
    get:
      tags:
        - auth
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  fullName:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  address:
                    type: string
                  profileImageUrl:
                    type: string
                  bankInfo:
                    type: object
                    properties:
                      bankName:
                        type: string
                      accountNumber:
                        type: string
        '401':
          description: Unauthorized

    put:
      tags:
        - auth
      summary: Update current user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                address:
                  type: string
                profileImageBase64:
                  type: string
                bankInfo:
                  type: object
                  properties:
                    bankName:
                      type: string
                    accountNumber:
                      type: string
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid profile data
        '401':
          description: Unauthorized

  /auth/logout:
    post:
      tags:
        - auth
      summary: Logout user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized

  /restaurants:
    post:
      tags:
        - restaurant
      summary: Create a new restaurant (seller only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, address, phone]
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                logoBase64:
                  type: string
      responses:
        '201':
          description: Restaurant created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /restaurants/mine:
    get:
      tags:
        - restaurant
      summary: Get list of seller's restaurants
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of restaurants
        '401':
          description: Unauthorized

  /restaurants/{id}:
    put:
      tags:
        - restaurant
      summary: Update restaurant details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                logoBase64:
                  type: string
      responses:
        '200':
          description: Restaurant updated
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Restaurant not found

  /deliveries/available:
    get:
      tags:
        - courier
      summary: Get available delivery requests
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available deliveries
        '401':
          description: Unauthorized

  /deliveries/{id}/accept:
    post:
      tags:
        - courier
      summary: Accept a delivery request
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delivery accepted successfully
        '400':
          description: Invalid delivery ID
        '401':
          description: Unauthorized
        '409':
          description: Delivery already assigned

  /deliveries/{id}/reject:
    post:
      tags:
        - courier
      summary: Reject a delivery request
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delivery rejected successfully
        '400':
          description: Invalid delivery ID
        '401':
          description: Unauthorized

  /deliveries/{id}/status:
    patch:
      tags:
        - courier
      summary: Update delivery status (received, delivered)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [received, delivered]
      responses:
        '200':
          description: Status updated
        '400':
          description: Invalid status or ID
        '401':
          description: Unauthorized

  /deliveries/history:
    get:
      tags:
        - courier
      summary: Get delivery history
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of completed and active deliveries
        '401':
          description: Unauthorized
  
  /vendors:
    get:
      tags:
        - buyer
      summary: List vendors with optional filters
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: rating
          in: query
          schema:
            type: number
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of vendors
        '401':
          description: Unauthorized

  /vendors/{id}/menu:
    get:
      tags:
        - buyer
      summary: View menu for a vendor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vendor menu
        '401':
          description: Unauthorized
        '404':
          description: Vendor not found

  /cart/items:
    post:
      tags:
        - buyer
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [itemId, quantity]
              properties:
                itemId:
                  type: string
                quantity:
                  type: integer
      responses:
        '200':
          description: Item added to cart
        '400':
          description: Invalid item or quantity
        '401':
          description: Unauthorized

  /cart:
    get:
      tags:
        - buyer
      summary: Get current cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current cart contents
        '401':
          description: Unauthorized

  /cart/items/{id}:
    delete:
      tags:
        - buyer
      summary: Remove item from cart
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item removed from cart
        '401':
          description: Unauthorized
        '404':
          description: Item not found

  /orders:
    post:
      tags:
        - buyer
      summary: Submit an order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [deliveryAddress]
              properties:
                deliveryAddress:
                  type: string
      responses:
        '200':
          description: Order submitted
        '400':
          description: Invalid order
        '401':
          description: Unauthorized

  /orders/history:
    get:
      tags:
        - buyer
      summary: Get order history
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of past orders
        '401':
          description: Unauthorized

  /favorites:
    get:
      tags:
        - buyer
      summary: Get favorite restaurants
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of favorite restaurants
        '401':
          description: Unauthorized

  /favorites/{restaurantId}:
    post:
      tags:
        - buyer
      summary: Add a restaurant to favorites
      security:
        - bearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Added to favorites
        '401':
          description: Unauthorized
        '404':
          description: Restaurant not found

  /ratings:
    post:
      tags:
        - buyer
      summary: Submit rating and review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [orderId, rating, comment]
              properties:
                orderId:
                  type: string
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                comment:
                  type: string
                imageBase64:
                  type: string
      responses:
        '200':
          description: Rating submitted
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Order not found

  /orders/track/{orderId}:
    get:
      tags:
        - order
      summary: Track order status live
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Current status of the order
        '401':
          description: Unauthorized
        '404':
          description: Order not found

  /transactions:
    get:
      tags:
        - order
      summary: Get user's transaction history
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of transactions
        '401':
          description: Unauthorized

  /wallet/top-up:
    post:
      tags:
        - order
      summary: Top up user's wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [method, amount]
              properties:
                method:
                  type: string
                  enum: [online, card]
                amount:
                  type: number
      responses:
        '200':
          description: Wallet topped up successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /payment/online:
    post:
      tags:
        - order
      summary: Make an online payment for an order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [orderId, method, amount]
              properties:
                orderId:
                  type: string
                method:
                  type: string
                  enum: [wallet, card]
                amount:
                  type: number
      responses:
        '200':
          description: Payment successful
        '400':
          description: Invalid input or insufficient balance
        '401':
          description: Unauthorized
        '404':
          description: Order not found
          
  /admin/users:
    get:
      tags:
        - admin
      summary: List all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
        '401':
          description: Unauthorized

  /admin/users/{id}/status:
    patch:
      tags:
        - admin
      summary: Update user approval status
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
      responses:
        '200':
          description: Status updated
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /admin/orders:
    get:
      tags:
        - admin
      summary: View all orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
        '401':
          description: Unauthorized

  /admin/deliveries:
    get:
      tags:
        - admin
      summary: View all deliveries
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of deliveries
        '401':
          description: Unauthorized

  /admin/transactions:
    get:
      tags:
        - admin
      summary: View financial transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of financial transactions
        '401':
          description: Unauthorized

  /admin/discounts:
    post:
      tags:
        - admin
      summary: Create a discount or coupon
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [type, value, scope, startDate, endDate]
              properties:
                type:
                  type: string
                  enum: [fixed, percent]
                value:
                  type: number
                scope:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Discount created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /admin/discounts/{id}:
    delete:
      tags:
        - admin
      summary: Delete a discount
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Discount deleted
        '401':
          description: Unauthorized
        '404':
          description: Discount not found

  /admin/reports:
    get:
      tags:
        - admin
      summary: Get analytics and system reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: System performance and sales analytics
        '401':
          description: Unauthorized


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
